{
  "createdAt": "2025-07-29T14:44:53.881Z",
  "updatedAt": "2025-07-29T19:00:53.000Z",
  "id": "lLOiPevOcAHJILQ8",
  "name": "Safe_LLM_Call",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "id": "init",
      "name": "Function Init",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        100,
        300
      ],
      "parameters": {
        "functionCode": "// Initialize variables\nconst inputs = items[0].json;\nreturn [{\n  json: {\n    prompt: inputs.prompt,\n    modelName: inputs.modelName,\n    systemMsg: inputs.systemMsg,\n    memoryKey: inputs.memoryKey,\n    attempt: 0,\n    maxRetries: 3,\n    retryDelay: 5000\n  }\n}];"
      }
    },
    {
      "id": "llm_agent",
      "name": "LLM Agent",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 2,
      "position": [
        300,
        300
      ],
      "parameters": {
        "operation": "chat",
        "model": "={{$json.modelName}}",
        "messages": {
          "values": [
            {
              "role": "system",
              "content": "={{$json.systemMsg}}"
            },
            {
              "role": "user",
              "content": "={{$json.prompt}}"
            }
          ]
        },
        "options": {
          "maxTokens": 4000,
          "temperature": 0.7
        }
      },
      "credentials": {
        "openAiApi": "kimi-demo-creds"
      }
    },
    {
      "id": "check_status",
      "name": "Check Status",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        500,
        300
      ],
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.error?.status}}",
              "operation": "equals",
              "value2": "429"
            },
            {
              "value1": "={{$json.error?.status}}",
              "operation": "greaterEqual",
              "value2": "500"
            }
          ]
        },
        "combineOperation": "OR"
      }
    },
    {
      "id": "delay_retry",
      "name": "Delay & Retry",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        500,
        500
      ],
      "parameters": {
        "delay": 5,
        "unit": "seconds"
      }
    },
    {
      "id": "increment_attempt",
      "name": "Increment Attempt",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        700,
        500
      ],
      "parameters": {
        "functionCode": "// Increment attempt counter\nconst current = items[0].json;\ncurrent.attempt += 1;\nreturn [{ json: current }];"
      }
    },
    {
      "id": "check_max_retries",
      "name": "Check Max Retries",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        900,
        500
      ],
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{$json.attempt}}",
              "operation": "less",
              "value2": "={{$json.maxRetries}}"
            }
          ]
        }
      }
    },
    {
      "id": "log_tokens",
      "name": "Log Tokens",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 3,
      "position": [
        1100,
        300
      ],
      "parameters": {
        "operation": "append",
        "sheetId": "your_token_log_sheet_id",
        "range": "A:F",
        "options": {
          "valueInputMode": "USER_ENTERED"
        },
        "dataMapping": {
          "values": [
            {
              "column": "ts",
              "value": "={{new Date().toISOString()}}"
            },
            {
              "column": "model",
              "value": "={{$json.modelName}}"
            },
            {
              "column": "promptTokens",
              "value": "={{$json.usage?.prompt_tokens || 0}}"
            },
            {
              "column": "completionTokens",
              "value": "={{$json.usage?.completion_tokens || 0}}"
            },
            {
              "column": "costUSD",
              "value": "={{($json.usage?.prompt_tokens || 0) * 0.0000015 + ($json.usage?.completion_tokens || 0) * 0.000002}}"
            },
            {
              "column": "runId",
              "value": "={{$json.memoryKey}}"
            }
          ]
        }
      },
      "credentials": {
        "googleApi": "google-sheets-creds"
      }
    },
    {
      "id": "success_output",
      "name": "Success Output",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1300,
        300
      ],
      "parameters": {
        "functionCode": "// Prepare success output\nconst result = items[0].json;\nreturn [{\n  json: {\n    success: true,\n    response: result.choices?.[0]?.message?.content || result.response,\n    tokens: result.usage || {},\n    model: result.model || result.modelName,\n    runId: result.memoryKey\n  }\n}];"
      }
    },
    {
      "id": "error_output",
      "name": "Error Output",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1100,
        700
      ],
      "parameters": {
        "functionCode": "// Prepare error output\nconst error = items[0].json;\nreturn [{\n  json: {\n    success: false,\n    error: error.error || 'Max retries exceeded',\n    attempts: error.attempt,\n    model: error.modelName,\n    runId: error.memoryKey\n  }\n}];"
      }
    }
  ],
  "connections": {
    "Function Init": {
      "main": [
        [
          {
            "node": "LLM Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LLM Agent": {
      "main": [
        [
          {
            "node": "Check Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Status": {
      "main": [
        [
          {
            "node": "Delay & Retry",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log Tokens",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delay & Retry": {
      "main": [
        [
          {
            "node": "Increment Attempt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Increment Attempt": {
      "main": [
        [
          {
            "node": "Check Max Retries",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Max Retries": {
      "main": [
        [
          {
            "node": "LLM Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Tokens": {
      "main": [
        [
          {
            "node": "Success Output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveManualExecutions": true,
    "saveExecutionProgress": true
  },
  "staticData": null,
  "meta": null,
  "pinData": null,
  "versionId": "fa842e9a-4362-4d86-b069-9830e66e68ac",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-07-29T14:44:53.891Z",
      "updatedAt": "2025-07-29T14:44:53.891Z",
      "role": "workflow:owner",
      "workflowId": "lLOiPevOcAHJILQ8",
      "projectId": "dfihSMO24GNVuIpM",
      "project": {
        "createdAt": "2025-06-02T01:49:12.943Z",
        "updatedAt": "2025-06-03T17:01:34.876Z",
        "id": "dfihSMO24GNVuIpM",
        "name": "guillaume bolivard <guillaumebolivard@gmail.com>",
        "type": "personal",
        "icon": null,
        "projectRelations": [
          {
            "createdAt": "2025-06-02T01:49:12.944Z",
            "updatedAt": "2025-06-02T01:49:12.944Z",
            "role": "project:personalOwner",
            "userId": "7bcd283c-9587-46b0-b078-91f3217e06b7",
            "projectId": "dfihSMO24GNVuIpM",
            "user": {
              "createdAt": "2025-06-02T01:49:12.554Z",
              "updatedAt": "2025-07-28T18:29:17.351Z",
              "id": "7bcd283c-9587-46b0-b078-91f3217e06b7",
              "email": "guillaumebolivard@gmail.com",
              "firstName": "guillaume",
              "lastName": "bolivard",
              "personalizationAnswers": {
                "version": "v4",
                "personalization_survey_submitted_at": "2025-06-03T17:01:45.849Z",
                "personalization_survey_n8n_version": "1.94.1",
                "companySize": "<20",
                "companyType": "saas",
                "role": "business-owner",
                "reportedSource": "google"
              },
              "settings": {
                "userActivated": true,
                "easyAIWorkflowOnboarded": true,
                "firstSuccessfulWorkflowId": "IMfYaRPSuI74c7Ep",
                "userActivatedAt": 1753375680028,
                "npsSurvey": {
                  "responded": true,
                  "lastShownAt": 1753727350221
                }
              },
              "role": "global:owner",
              "disabled": false,
              "mfaEnabled": false,
              "isPending": false
            }
          }
        ]
      }
    }
  ],
  "tags": []
}