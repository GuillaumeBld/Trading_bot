{
  "createdAt": "2025-07-20T05:07:37.978Z",
  "updatedAt": "2025-07-23T12:32:15.000Z",
  "id": "gwN5uBm6WBODxmDY",
  "name": "Scheduled video generator",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "content": "## | Step 1: Generate Clips (Wavespeed AI)\n",
        "height": 440,
        "width": 1040,
        "color": 2
      },
      "id": "27361b65-7ddb-489a-b474-bde016b414c9",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2860,
        660
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## | Step 2: Generate Sounds (Fal AI)\n",
        "height": 440,
        "width": 920,
        "color": 2
      },
      "id": "56b5f137-fff6-4974-8565-5bd160c4595e",
      "name": "Sticky Note13",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1800,
        660
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## | INPUT: Starting Idea Section",
        "height": 760,
        "width": 2000,
        "color": 7
      },
      "id": "a9fdba37-8f3a-4d3e-aee9-3dd989d2d813",
      "name": "Sticky Note14",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -100,
        -100
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## | Step 3: Stitch Video (Fal AI)",
        "height": 380,
        "width": 1980,
        "color": 3
      },
      "id": "5fbdac4f-f31f-4008-91c5-8b3db097b260",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -80,
        1280
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## | Step 4 ‚Äî Publish Video to Social Media\n",
        "height": 760,
        "width": 1980,
        "color": 4
      },
      "id": "bc41474d-60e1-4bc0-b0a3-d61cd8e6aa0e",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -80,
        1640
      ],
      "typeVersion": 1,
      "disabled": true
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "id": "81ca9955-677b-4843-b537-ab52c6a7ef52",
      "name": "Trigger: Start Daily Content Generation",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        0,
        0
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "Generate a creative concept involving:\n\n[[\nA solid, hard window-dressing object being sliced cleanly with a sharp blade. Your response must follow this structure:\n\n\"(Color) (Material) shaped like a (random everyday object that doesn't usually get sliced)\"\n\nFor inspiration, imagine examples like: obsidian shaped like a chess piece, quartz shaped like a coffee mug, sapphire shaped like a seashell, or titanium shaped like a leaf.\n\n]]\n\nReflect carefully before answering to ensure originality and visual appeal.\n\nUse the Think tool to review your output",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=**Role:**  \nYou are an AI designed to generate **one immersive, realistic idea** based on a user-provided topic. Your output must be formatted as a **single-line JSON array** and follow the rules below exactly.\n\n---\n\n### RULES\n\n1. **Number of ideas**  \n   - Return **only one idea**.\n\n2. **Topic**  \n   - The user will provide a keyword (e.g., ‚Äúglass cutting ASMR,‚Äù ‚Äúwood carving sounds,‚Äù ‚Äúsatisfying rock splits‚Äù).\n\n3. **Idea**  \n   - Maximum 13 words.  \n   - Describe a viral-worthy, original, or surreal moment related to the topic.\n\n4. **Caption**  \n   - Short, punchy, viral-friendly.  \n   - Include **one emoji**.  \n   - Exactly **12 hashtags** in this order:  \n     1. 4 topic-relevant hashtags  \n     2. 4 all-time most popular hashtags  \n     3. 4 currently trending hashtags (based on live research)  \n   - All in lowercase.\n\n5. **Environment**  \n   - Maximum 20 words.  \n   - Must match the action in the Idea exactly.  \n   - Specify location (studio table, natural terrain, lab bench‚Ä¶), visual details (dust particles, polished surface, subtle reflections‚Ä¶), and style (macro close-up, cinematic slow-motion, minimalist‚Ä¶).\n\n6. **Sound**  \n   - Maximum 15 words.  \n   - Describe the primary sound for the scene (to feed into an audio model).\n\n7. **Status**  \n   - Always set to `\"for production\"`.\n\n8. **ID**\n    - Generate a unique ID for each creation (make sure to read last genarated ID in the google sheet in the first column to create next one)\n\n---\n\n### OUTPUT FORMAT (single-line JSON array)\n\n```json\n[\n  {\n    \"ID\": \"#000000\",\n    \"Caption\": \"Your short viral title with emoji #4_topic_hashtags #4_all_time_popular_hashtags #4_trending_hashtags\",\n    \"Idea\": \"Your idea under 13 words\",\n    \"Environment\": \"Your vivid setting under 20 words matching the action\",\n    \"Sound\": \"Your primary sound description under 15 words\",\n    \"Status\": \"for production\"\n  }\n]\n"
        }
      },
      "id": "7ca46c0e-66b0-4283-9ffd-029c4406290b",
      "name": "AI Agent: Generate Creative Video Idea",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        180,
        60
      ],
      "typeVersion": 1.9,
      "retryOnFail": true
    },
    {
      "parameters": {},
      "id": "8539b183-0c2a-433d-9241-979da78e832c",
      "name": "Tool: Inject Creative Perspective (Idea)",
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "position": [
        280,
        440
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsonSchemaExample": "[\n  {\n    \"ID\": \"#000000\",\n    \"Caption\": \"Diver Removes Nets Off Whale üêã #whalerescue #marinelife #oceanrescue #seahelpers #love #nature #instagood #explore #viral #savenature #oceanguardians #cleanoceans\",\n    \"Idea\": \"Diver carefully cuts tangled net from distressed whale in open sea\",\n    \"Environment\": \"Open ocean, sunlight beams through water, diver and whale, cinematic realism\",\n    \"Sound\": \"Primary sound description under 15 words\",\n    \"Status\": \"for production\"\n  }\n]\n"
      },
      "id": "8e5f5ae9-0eba-42e0-aa35-2d9f2ae9b09c",
      "name": "Parse AI Output (Idea, Environment, Sound)",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "position": [
        520,
        260
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "=1liAQknFquByT7BsvCBCxwLXTYzcyTnveIn74Vl8QM9s",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "0",
          "mode": "id"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Caption": "={{ $json.output[0].Caption }}",
            "Idea": "={{ $json.output[0].Idea }}",
            "Environment": "={{ $json.output[0].Environment }}",
            "Sound": "={{ $json.output[0].Sound }}",
            "Status": "={{ $json.output[0].Status }}",
            "ID": "={{ $json.output[0].ID }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "ID",
              "displayName": "ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Caption",
              "displayName": "Caption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Idea",
              "displayName": "Idea",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Environment",
              "displayName": "Environment",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Sound",
              "displayName": "Sound",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Idea_",
              "displayName": "Idea_",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Environment_",
              "displayName": "Environment_",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Sound_",
              "displayName": "Sound_",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Scene 1",
              "displayName": "Scene 1",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Scene 2",
              "displayName": "Scene 2",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Scene 3",
              "displayName": "Scene 3",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Video URL ",
              "displayName": "Video URL ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Thumbnail",
              "displayName": "Thumbnail",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "3f5ac980-3f4e-46c0-9ad7-4270146c39aa",
      "name": "Save Idea & Metadata to Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        820,
        40
      ],
      "typeVersion": 4.5,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "ie8rgGVXzeaoIA51",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Generate a structured JSON video prompt for a multi-scene cinematic sequence based on the previous idea.\n\nEach prompt must follow this structure with high visual precision:\n\n{\n  \"shot\": {\n    \"composition\": \"medium close-up, over-the-shoulder framing\",\n    \"camera_motion\": \"slow dolly in\",\n    \"frame_rate\": \"24fps\",\n    \"film_grain\": \"16mm film stock with visible grain\"\n  },\n  \"subject\": {\n    \"description\": \"solitary figure with tense posture and focused expression\",\n    \"wardrobe\": \"dark trench coat with visible texture and soft reflection\"\n  },\n  \"scene\": {\n    \"location\": \"abandoned warehouse with broken windows and dust particles\",\n    \"time_of_day\": \"late afternoon\",\n    \"environment_details\": \"shafts of light cutting through haze, cluttered floor\"\n  },\n  \"visual_details\": {\n    \"action\": \"the subject unsheathes a knife slowly and cuts through a rope\",\n    \"props\": \"frayed rope, rusty blade, flickering lantern\"\n  },\n  \"cinematography\": {\n    \"lighting\": \"chiaroscuro with strong shadows and a narrow key light\",\n    \"tone\": \"moody and suspenseful\",\n    \"style\": \"gritty dramatic realism\"\n  },\n  \"audio\": {\n    \"ambience\": \"distant industrial hum and soft echoes\",\n    \"sound_design\": \"blade scraping against metal, subtle breath\",\n    \"dialogue\": \"none\"\n  },\n  \"color_palette\": \"desaturated blue-gray tones with amber highlights\",\n  \"visual_rules\": {\n    \"prohibited_elements\": [\"subtitles\", \"text overlays\", \"any written language\"]\n  },\n  \"reference_image\": \"{{ reference_path_if_any }}\",\n  \"style_reference\": \"Match lighting and color from reference\"\n}\n\nGenerate 3 versions based on the same idea, each with variations in camera angle, lighting direction, and emotional tension.\n\nUse the Think tool to validate the coherence and cinematic quality of each.",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=Role: You are a prompt-generation AI specializing in cinematic, ASMR-style video prompts. Your task is to generate a multi-scene video sequence that vividly shows a sharp knife actively cutting through a specific object in a clean, high-detail setting.\n\nYour writing must follow this style:\n\nSharp, precise cinematic realism.\n\nMacro-level detail with tight focus on the blade interacting with the object.\n\nThe knife must always be in motion ‚Äî slicing, splitting, or gliding through the material. Never idle or static.\n\nCamera terms are allowed (e.g. macro view, tight angle, over-the-blade shot).\n\nEach scene must contain all of the following, expressed through detailed visual language:\n\n‚úÖ The main object or subject (from the Idea)\n\n‚úÖ The cutting environment or surface (from the Environment)\n\n‚úÖ The texture, structure, and behavior of the material as it‚Äôs being cut\n\n‚úÖ A visible, sharp blade actively cutting\n\nDescriptions should show:\n\nThe physical makeup of the material ‚Äî is it translucent, brittle, dense, reflective, granular, fibrous, layered, or fluid-filled?\n\nHow the material responds to the blade ‚Äî resistance, cracking, tearing, smooth separation, tension, vibration.\n\nThe interaction between the blade and the surface ‚Äî light reflection, buildup of particles, contact points, residue or dust.\n\nAny ASMR-relevant sensory cues like particle release, shimmer, or subtle movement, but always shown visually ‚Äî not narrated.\n\nTone:\n\nClean, clinical, visual.\n\nNo poetic metaphors, emotion, or storytelling.\n\nAvoid fantasy or surreal imagery.\n\nAll description must feel physically grounded and logically accurate.\n\nLength:\n\nEach scene must be between 1,000 and 2,000 characters.\n\nNo shallow or repetitive scenes ‚Äî each must be immersive, descriptive, and specific.\n\nEach scene should explore a distinct phase of the cutting process, a different camera perspective, or a new behavior of the material under the blade.\n\nInputs:\n\nIdea: \"{{ $json.idea }}\"\nEnvironment: \"{{ $json.environment_prompt }}\"\nSound: \"{{ $json.sound_prompt }}\"\n\nFormat:\n\nIdea: \"...\"\nEnvironment: \"...\"\nSound: \"...\"\n\nScene 1: \"...\"\nScene 2: \"...\"\nScene 3: \"...\"\nScene 4: \"...\"\nScene 5: \"...\"\nScene 6: \"...\"\nScene 7: \"...\"\nScene 8: \"...\"\nScene 9: \"...\"\nScene 10: \"...\"\nScene 11: \"...\"\nScene 12: \"...\"\nScene 13: \"...\"\n\n"
        }
      },
      "id": "286816b3-6d9d-42e1-8a70-b4c27fb9ef5c",
      "name": "AI Agent: Generate Detailed Video Prompts",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        1100,
        40
      ],
      "typeVersion": 1.9,
      "retryOnFail": true
    },
    {
      "parameters": {},
      "id": "ae03fb23-da24-4b36-83ed-3aa8387f9016",
      "name": "Tool: Refine and Validate Prompts1",
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "position": [
        1420,
        480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"Idea\": \"An obsidian rock being sliced with a shimmering knife\",\n  \"Environment\": \"Clean studio table, subtle light reflections\",\n  \"Sound\": \"Crisp slicing, deep grinding, and delicate crumbling\",\n  \"Scene 1\": \"Extreme macro shot: a razor-sharp, polished knife blade presses into the dark, granular surface of an obsidian rock, just beginning to indent.\",\n  \"Scene 2\": \"Close-up: fine, iridescent dust particles erupt from the point of contact as the blade cuts deeper into the obsidian, catching the studio light.\",\n  \"Scene 3\": \"Mid-shot: the knife, held perfectly steady, has formed a shallow, clean groove across the obsidian's shimmering surface, revealing a new, smooth texture.\"\n}"
      },
      "id": "976f9b02-67cc-4900-a447-7f440fe99151",
      "name": "Parse Structured Video Prompt Output",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "position": [
        1540,
        300
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "jsCode": "function findSceneEntries(obj) {\n  const scenes = [];\n\n  for (const [key, value] of Object.entries(obj)) {\n    if (key.toLowerCase().startsWith(\"scene\") && typeof value === \"string\") {\n      scenes.push(value);\n    } else if (typeof value === \"object\" && value !== null) {\n      scenes.push(...findSceneEntries(value));\n    }\n  }\n\n  return scenes;\n}\n\nlet output = [];\n\ntry {\n  const inputData = items[0].json;\n  const scenes = findSceneEntries(inputData);\n\n  if (scenes.length === 0) {\n    throw new Error(\"No scene keys found at any level.\");\n  }\n\n  output = scenes.map(scene => ({ description: scene }));\n} catch (e) {\n  throw new Error(\"Could not extract scenes properly. Details: \" + e.message);\n}\n\nreturn output;\n"
      },
      "id": "70cf1a7d-6d2b-496c-aad0-c55baa10a39c",
      "name": "Extract Individual Scene Descriptions",
      "type": "n8n-nodes-base.code",
      "position": [
        -2820,
        940
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.wavespeed.ai/api/v3/bytedance/seedance-v1-pro-t2v-480p",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "aspect_ratio",
              "value": "9:16"
            },
            {
              "name": "duration",
              "value": "10"
            },
            {
              "name": "prompt",
              "value": "=={{ `VIDEO THEME: ${$item(0).$node[\"AI Agent: Generate Detailed Video Prompts\"].json.output.Idea} | WHAT HAPPENS IN THE VIDEO: ${$json.description} | WHERE THE VIDEO IS SHOT: ${$item(0).$node[\"AI Agent: Generate Detailed Video Prompts\"].json.output.Environment}` }}"
            }
          ]
        },
        "options": {}
      },
      "id": "ae66e5df-1577-4fc8-bf6c-1bf2d1c33e99",
      "name": "Generate Video Clips (Wavespeed AI)",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -2680,
        760
      ],
      "typeVersion": 4.2,
      "credentials": {
        "httpHeaderAuth": {
          "id": "pGjf5G1B4ohFX6Qx",
          "name": "Header Auth account"
        },
        "httpBearerAuth": {
          "id": "rRbyzY5BL1yCg7EP",
          "name": "Bearer Auth account"
        }
      }
    },
    {
      "parameters": {
        "url": "==https://api.wavespeed.ai/api/v3/predictions/{{$json.data.id}}/result",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "options": {}
      },
      "id": "815bf2ae-e225-44f4-8700-9cd89b7dbc62",
      "name": "Retrieve Video Clips",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -2520,
        900
      ],
      "typeVersion": 4.2,
      "retryOnFail": false,
      "credentials": {
        "httpHeaderAuth": {
          "id": "pGjf5G1B4ohFX6Qx",
          "name": "Header Auth account"
        },
        "httpBearerAuth": {
          "id": "rRbyzY5BL1yCg7EP",
          "name": "Bearer Auth account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://queue.fal.run/fal-ai/mmaudio-v2 ",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Key a7db0496-7ea7-4d86-9062-779a564e4819:26d63bcd0db8077a4fc7af083166b4c8"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "prompt",
              "value": "=={{ 'ASMR Soothing sound effects. ' + $item(0).$node[\"AI Agent: Generate Detailed Video Prompts\"].json.output.Sound }}\n"
            },
            {
              "name": "duration",
              "value": "10"
            },
            {
              "name": "video_url",
              "value": "=={{ $('Retrieve Video Clips').item.json.data.urls.get }}"
            }
          ]
        },
        "options": {
          "batching": {
            "batch": {
              "batchSize": 1,
              "batchInterval": 2000
            }
          }
        }
      },
      "id": "3a1f65de-15d0-4d73-83aa-95f2a8e99b03",
      "name": "Generate ASMR Sound (Fal AI)",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1560,
        720
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "amount": 15
      },
      "id": "4aea0c2a-8877-46ee-8bcc-f626960164e6",
      "name": "Wait for Sound Generation (Fal AI)",
      "type": "n8n-nodes-base.wait",
      "position": [
        -1740,
        900
      ],
      "webhookId": "abac7859-a9f6-46f3-95c2-df43ec32807d",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "url": "=https://queue.fal.run/fal-ai/mmaudio-v2/requests/{{ $json.request_id }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Key a7db0496-7ea7-4d86-9062-779a564e4819:26d63bcd0db8077a4fc7af083166b4c8"
            }
          ]
        },
        "options": {}
      },
      "id": "6ae62277-b61a-4347-bfe2-aaaa67f44121",
      "name": "Retrieve Final Sound Output",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1060,
        720
      ],
      "typeVersion": 4.2,
      "retryOnFail": true
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    video_urls: items.map(item => item.json.video.url)\n  }\n];"
      },
      "id": "f941d761-2745-40a3-9a12-1d034e5ce2b8",
      "name": "List Clip URLs for Stitching",
      "type": "n8n-nodes-base.code",
      "position": [
        -2800,
        1180
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://queue.fal.run/fal-ai/ffmpeg-api/compose",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Key a7db0496-7ea7-4d86-9062-779a564e4819:26d63bcd0db8077a4fc7af083166b4c8"
            }
          ]
        },
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "={\n  \"tracks\": [\n    {\n      \"id\": \"1\",\n      \"type\": \"video\",\n      \"keyframes\": [\n        { \"url\": \"{{ $json.video_urls[0] }}\", \"timestamp\": 0, \"duration\": 10 },\n        { \"url\": \"{{ $json.video_urls[1] }}\", \"timestamp\": 10, \"duration\": 10 },\n        { \"url\": \"{{ $json.video_urls[2] }}\", \"timestamp\": 20, \"duration\": 10 }\n      ]\n    }\n  ]\n}",
        "options": {
          "batching": {
            "batch": {
              "batchSize": 1,
              "batchInterval": 2000
            }
          }
        }
      },
      "id": "e6bd8a17-8cb6-4990-a434-a4b2c98d2a2d",
      "name": "Merge Clips into Final Video (Fal AI)",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -2600,
        1220
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "amount": 60
      },
      "id": "7158cf00-278e-42e8-8e3a-af29ab6d423c",
      "name": "Wait for Video Rendering (Fal AI)",
      "type": "n8n-nodes-base.wait",
      "position": [
        -1620,
        1300
      ],
      "webhookId": "389fcfd1-9337-4334-a54b-4114f36e30bc",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "url": "=https://queue.fal.run/fal-ai/ffmpeg-api/requests/{{ $json.request_id }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Key a7db0496-7ea7-4d86-9062-779a564e4819:26d63bcd0db8077a4fc7af083166b4c8"
            }
          ]
        },
        "options": {}
      },
      "id": "dda0d9ba-4940-45a1-820a-31a088c1bcab",
      "name": "Retrieve Final Merged Video",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1320,
        1220
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "=1liAQknFquByT7BsvCBCxwLXTYzcyTnveIn74Vl8QM9s",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "894271191",
          "mode": "id"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "idea": "={{ $('Save Idea & Metadata to Google Sheets').first().json.Idea }}",
            "production": "done",
            "video_url": "={{ $json.video_url }}",
            "thumbnail_url": "={{ $json.thumbnail_url }}",
            "environment_prompt": "={{ $('Save Idea & Metadata to Google Sheets').first().json.Environment }}",
            "caption": "={{ $('Save Idea & Metadata to Google Sheets').first().json.Caption }}",
            "sound_prompt": "={{ $('Save Idea & Metadata to Google Sheets').first().json.Sound }}",
            "sound_url": "={{ $('Retrieve Final Sound Output').first().json.video.url }}"
          },
          "matchingColumns": [
            "idea"
          ],
          "schema": [
            {
              "id": "idea",
              "displayName": "idea",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "caption",
              "displayName": "caption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "environment_prompt",
              "displayName": "environment_prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "sound_prompt",
              "displayName": "sound_prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "production",
              "displayName": "production",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "sound_url",
              "displayName": "sound_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "video_url",
              "displayName": "video_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "thumbnail_url",
              "displayName": "thumbnail_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "2e753623-7a54-478d-b6b2-1bd38f50d077",
      "name": "URL Final Video",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        -1060,
        1360
      ],
      "typeVersion": 4.5,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "ie8rgGVXzeaoIA51",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"instagram_id\": \"1111\",\n  \"youtube_id\": \"1111\",\n  \"threads_id\": \"1111\",\n  \"tiktok_id\": \"1111\",\n  \"facebook_id\": \"1111\",\n  \"facebook_page_id\": \"1111\",\n  \"twitter_id\": \"1111\",\n  \"linkedin_id\": \"1111\",\n  \"pinterest_id\": \"1111\",\n  \"pinterest_board_id\": \"1111\",\n  \"bluesky_id\": \"1111\"\n}\n",
        "options": {}
      },
      "id": "9be55c30-40e2-447a-adc7-6e2f9b2b016e",
      "name": "Assign Social Media IDs",
      "type": "n8n-nodes-base.set",
      "position": [
        100,
        2240
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "=1liAQknFquByT7BsvCBCxwLXTYzcyTnveIn74Vl8QM9s",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "894271191",
          "mode": "id"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "video_url",
              "lookupValue": "={{ $json.video_url }}"
            }
          ]
        },
        "options": {}
      },
      "id": "42e45eb9-e702-4f28-bf0f-658fc725b7f3",
      "name": "Get my video",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        -20,
        1940
      ],
      "typeVersion": 4.5,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "ie8rgGVXzeaoIA51",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://backend.blotato.com/v2/media",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "blotato-api-key",
              "value": "YOUR_API_HERE"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "url",
              "value": "={{ $('Get my video').item.json['final_output'] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "39893115-e95d-43ee-ada1-edaa7ebda741",
      "name": "Upload Video to Blotato",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        420,
        2840
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://backend.blotato.com/v2/posts",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "blotato-api-key",
              "value": "YOUR_API_HERE"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"post\": {\n    \"accountId\": \"{{ $('Assign Social Media IDs').item.json.instagram_id }}\",\n    \"target\": {\n      \"targetType\": \"instagram\"\n    },\n    \"content\": {\n      \"text\": \"{{ $('Get my video').item.json.DESCRIPTION }}\",\n      \"platform\": \"instagram\",\n      \"mediaUrls\": [\n        \"{{ $json.url }}\"\n      ]\n    }\n  }\n}\n\n",
        "options": {}
      },
      "id": "6907de1d-aa7b-4a16-8e96-b0d24b498f3a",
      "name": "INSTAGRAM",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        860,
        2580
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://backend.blotato.com/v2/posts",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "blotato-api-key",
              "value": "YOUR_API_HERE"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"post\": {\n    \"accountId\": \"{{ $('Assign Social Media IDs').item.json.youtube_id }}\",\n    \"target\": {\n      \"targetType\": \"youtube\",\n      \"title\": \"{{ $('Get my video').item.json.Titre }}\",\n      \"privacyStatus\": \"unlisted\",\n      \"shouldNotifySubscribers\": \"false\"\n    },\n    \"content\": {\n      \"text\": \"{{ $('Get my video').item.json.DESCRIPTION }}\",\n      \"platform\": \"youtube\",\n      \"mediaUrls\": [\n        \"{{ $json.url }}\"\n      ]\n    }\n  }\n}\n",
        "options": {}
      },
      "id": "11688aa9-27bd-464b-b5d1-abdf96e80194",
      "name": "YOUTUBE",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1080,
        2580
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://backend.blotato.com/v2/posts",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "blotato-api-key",
              "value": "=YOUR_API_HERE"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"post\": {\n    \"accountId\": \"{{ $('Assign Social Media IDs').item.json.tiktok_id }}\",\n    \"target\": {\n      \"targetType\": \"tiktok\",\n      \"isYourBrand\": \"false\", \n      \"disabledDuet\": \"false\",\n      \"privacyLevel\": \"PUBLIC_TO_EVERYONE\",\n      \"isAiGenerated\": \"true\",\n      \"disabledStitch\": \"false\",\n      \"disabledComments\": \"false\",\n      \"isBrandedContent\": \"false\"\n      \n    },\n    \"content\": {\n      \"text\": \"{{ $('Get my video').item.json.DESCRIPTION }}\",\n      \"platform\": \"tiktok\",\n      \"mediaUrls\": [\n        \"{{ $json.url }}\"\n      ]\n    }\n  }\n}\n",
        "options": {}
      },
      "id": "bccc8c53-6e63-4610-aa5c-9f1ceebd4514",
      "name": "TIKTOK",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1280,
        2580
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://backend.blotato.com/v2/posts",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "blotato-api-key",
              "value": "=YOUR_API_HERE"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"post\": {\n    \"accountId\": \"{{ $('Assign Social Media IDs').item.json.facebook_id }}\",\n    \"target\": {\n      \"targetType\": \"facebook\",\n      \"pageId\": \"{{ $('Assign Social Media IDs').item.json.facebook_page_id }}\"\n\n      \n    },\n    \"content\": {\n      \"text\": \"{{ $('Get my video').item.json.DESCRIPTION }}\",\n      \"platform\": \"facebook\",\n      \"mediaUrls\": [\n        \"{{ $json.url }}\"\n      ]\n    }\n  }\n}",
        "options": {}
      },
      "id": "8dac2a2f-f061-4006-99ef-f5a883a7df42",
      "name": "FACEBOOK",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        860,
        2820
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://backend.blotato.com/v2/posts",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "blotato-api-key",
              "value": "YOUR_API_HERE"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"post\": {\n    \"accountId\": \"{{ $('Assign Social Media IDs').item.json.threads_id }}\",\n    \"target\": {\n      \"targetType\": \"threads\"\n      \n    },\n    \"content\": {\n      \"text\": \"{{ $('Get my video').item.json.DESCRIPTION }}\",\n      \"platform\": \"threads\",\n      \"mediaUrls\": [\n        \"{{ $json.url }}\"\n      ]\n    }\n  }\n}\n",
        "options": {}
      },
      "id": "b80e91d6-0d45-4b63-a745-4f2e37cbe458",
      "name": "THREADS",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1080,
        2820
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://backend.blotato.com/v2/posts",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "blotato-api-key",
              "value": "YOUR_API_HERE"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"post\": {\n    \"accountId\": \"{{ $('Assign Social Media IDs').item.json.linkedin_id }}\",\n    \"target\": {\n      \"targetType\": \"linkedin\"\n      \n    },\n    \"content\": {\n      \"text\": \"{{ $('Get my video').item.json.DESCRIPTION }}\",\n      \"platform\": \"linkedin\",\n      \"mediaUrls\": [\n        \"{{ $json.url }}\"\n      ]\n    }\n  }\n}\n",
        "options": {}
      },
      "id": "9b8005cf-ad8e-47a3-952b-8cf7aae314b4",
      "name": "LINKEDIN",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        860,
        3060
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://backend.blotato.com/v2/posts",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "blotato-api-key",
              "value": "YOUR_API_HERE"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "= {\n  \"post\": {\n    \"accountId\": \"{{ $('Assign Social Media IDs').item.json.bluesky_id }}\",\n    \"target\": {\n      \"targetType\": \"bluesky\"\n      \n    },\n    \"content\": {\n      \"text\": \"{{ $('Get my video').item.json.DESCRIPTION }}\",\n      \"platform\": \"bluesky\",\n      \"mediaUrls\": [\n        \"https://pbs.twimg.com/media/GE8MgIiWEAAfsK3.jpg\"\n      ]\n    }\n  }\n}\n",
        "options": {}
      },
      "id": "88f9c980-a581-4fdc-b760-163ad5e29778",
      "name": "BLUESKY",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1080,
        3060
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://backend.blotato.com/v2/posts",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "blotato-api-key",
              "value": "YOUR_API_HERE"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"post\": {\n    \"accountId\": \"{{ $('Assign Social Media IDs').item.json.pinterest_id }}\",\n    \"target\": {\n      \"targetType\": \"pinterest\",\n      \"boardId\": \"{{ $('Assign Social Media IDs').item.json.pinterest_board_id }}\"      \n    },\n    \"content\": {\n      \"text\": \"{{ $('Get my video').item.json.DESCRIPTION }}\",\n      \"platform\": \"pinterest\",\n      \"mediaUrls\": [\n        \"https://pbs.twimg.com/media/GE8MgIiWEAAfsK3.jpg\"\n      ]\n    }\n  }\n}\n\n",
        "options": {}
      },
      "id": "6bea9a1d-6306-49c9-aef3-556e04929ddd",
      "name": "PINTEREST",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1280,
        3060
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "="
        },
        "sheetName": {
          "__rl": true,
          "mode": "id",
          "value": "="
        },
        "columns": {
          "value": {
            "STATUS": "Publish",
            "row_number": "={{ $('Get my video').item.json.row_number }}"
          },
          "schema": [
            {
              "id": "PROMPT",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "PROMPT",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "DESCRIPTION",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "DESCRIPTION",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "URL VIDEO",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "URL VIDEO",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Titre",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Titre",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "STATUS",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "STATUS",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "type": "string",
              "display": true,
              "removed": false,
              "readOnly": true,
              "required": false,
              "displayName": "row_number",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [
            "row_number"
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "c8894a6e-4915-4fed-9510-7dc07e34f211",
      "name": "Update Production",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        480,
        2200
      ],
      "typeVersion": 4.5
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://backend.blotato.com/v2/posts",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "blotato-api-key",
              "value": "YOUR_API_HERE"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"post\": {\n    \"accountId\": \"{{ $('Assign Social Media IDs').item.json.twitter_id }}\",\n    \"target\": {\n      \"targetType\": \"twitter\"\n      \n    },\n    \"content\": {\n      \"text\": \"{{ $('Get my video').item.json.DESCRIPTION }}\",\n      \"platform\": \"twitter\",\n      \"mediaUrls\": [\n        \"{{ $json.url }}\"\n      ]\n    }\n  }\n}\n",
        "options": {}
      },
      "id": "f80c3d6f-7e76-436e-91fb-76d53ea1a34e",
      "name": "TWITTER",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1280,
        2820
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "93f56297-65c4-46cf-871a-9a12e4e33843",
              "leftValue": "={{ $json.data.status }}",
              "rightValue": "created",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2360,
        780
      ],
      "id": "6ec76652-e9f3-4bde-ab2f-dbf04a8f2279",
      "name": "If"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "93f56297-65c4-46cf-871a-9a12e4e33843",
              "leftValue": "={{ $json.status }}",
              "rightValue": "=IN_QUEUE",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2060,
        1220
      ],
      "id": "74227e3e-c71d-4c0d-86d8-dbccf557b0d8",
      "name": "If1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "93f56297-65c4-46cf-871a-9a12e4e33843",
              "leftValue": "={{ $json.status }}",
              "rightValue": "IN_QUEUE",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1400,
        880
      ],
      "id": "607d9e2f-5db9-4043-9001-bef5e9c053e3",
      "name": "If2"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "c24b2d4e-8060-449e-b521-4035efe3f630",
      "name": "Prepare Post Payload",
      "type": "n8n-nodes-base.set",
      "position": [
        460,
        1960
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "url": "https://www.googleapis.com/upload/youtube/v3/videos?part=snippet,status&uploadType=resumable",
        "jsonParameters": true,
        "options": {}
      },
      "id": "8280f691-536e-473d-a781-3981f4949119",
      "name": "YT Init Upload",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1080,
        1720
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "url": "={{ $node[\"YT Init Upload\"].json.headers.location }}",
        "options": {}
      },
      "id": "fad18390-227d-4945-b1a5-812185c7c296",
      "name": "YT PUT Video",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1620,
        1720
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "url": "https://graph.facebook.com/v19.0/INSTAGRAM_BUSINESS_ID/media",
        "options": {}
      },
      "id": "b65ae26b-4ee4-4447-b265-eadbf57739fa",
      "name": "IG Create Container",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1060,
        1960
      ],
      "authentication": "headerAuth",
      "typeVersion": 1
    },
    {
      "parameters": {
        "url": "https://graph.facebook.com/v19.0/INSTAGRAM_BUSINESS_ID/media_publish",
        "options": {}
      },
      "id": "d5bee32e-8fc1-41b0-9558-df382cda6f36",
      "name": "IG Publish Reel",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1600,
        1960
      ],
      "authentication": "headerAuth",
      "typeVersion": 1
    },
    {
      "parameters": {
        "url": "https://open.tiktokapis.com/v2/post/publish/video/",
        "jsonParameters": true,
        "options": {}
      },
      "id": "e8f842f5-405c-4f99-8396-082471cf81bd",
      "name": "TikTok Publish",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1060,
        2200
      ],
      "authentication": "headerAuth",
      "typeVersion": 1
    },
    {
      "parameters": {
        "amount": 10
      },
      "id": "efa6c170-7fe2-40c7-aa03-d0faeccb9589",
      "name": "Wait for Clip Generation (Wavespeed AI)1",
      "type": "n8n-nodes-base.wait",
      "position": [
        720,
        420
      ],
      "webhookId": "60604cd4-5d90-48dc-93f4-1335e5f03fdd",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "93f56297-65c4-46cf-871a-9a12e4e33843",
              "leftValue": "={{ $json.output[0].Status }}",
              "rightValue": "for production",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        540,
        60
      ],
      "id": "3b236c23-9f76-4b82-9c06-30f0630df56a",
      "name": "If3"
    },
    {
      "parameters": {
        "amount": 10
      },
      "id": "0f26a482-c91a-4650-ae01-f7eeb5344360",
      "name": "Wait for Clip Generation (Wavespeed AI)2",
      "type": "n8n-nodes-base.wait",
      "position": [
        960,
        380
      ],
      "webhookId": "60604cd4-5d90-48dc-93f4-1335e5f03fdd",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "93f56297-65c4-46cf-871a-9a12e4e33843",
              "leftValue": "={{ $json.Status }}",
              "rightValue": "ready for production",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1720,
        520
      ],
      "id": "c8d0bf18-4c2c-47a3-8866-c966a9698c91",
      "name": "If4"
    },
    {
      "parameters": {
        "model": "moonshotai/kimi-k2",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        1260,
        420
      ],
      "id": "7b4d6c0a-e7ae-4d12-9b1a-c3286c2981bd",
      "name": "LLM: Draft Video Prompt Details (Kimi V2)",
      "credentials": {
        "openRouterApi": {
          "id": "DgQSQ6OnWRyMfHDV",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "model": "moonshotai/kimi-k2",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        180,
        280
      ],
      "id": "43eb692b-f422-4169-a255-33f76959c7ae",
      "name": "LLM: Generate Raw Idea (Kimi V2)",
      "credentials": {
        "openRouterApi": {
          "id": "DgQSQ6OnWRyMfHDV",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "amount": 120
      },
      "id": "7a577a67-0e33-49c3-a172-f2505ce591bb",
      "name": "Wait for Sound Generation (Fal AI)1",
      "type": "n8n-nodes-base.wait",
      "position": [
        -1240,
        740
      ],
      "webhookId": "abac7859-a9f6-46f3-95c2-df43ec32807d",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "=1liAQknFquByT7BsvCBCxwLXTYzcyTnveIn74Vl8QM9s",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "0",
          "mode": "id"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [
            {
              "id": "ID",
              "displayName": "ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Caption",
              "displayName": "Caption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Idea",
              "displayName": "Idea",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Environment",
              "displayName": "Environment",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Sound",
              "displayName": "Sound",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Idea_",
              "displayName": "Idea_",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Environment_",
              "displayName": "Environment_",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Sound_",
              "displayName": "Sound_",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Scene 1",
              "displayName": "Scene 1",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Scene 2",
              "displayName": "Scene 2",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Scene 3",
              "displayName": "Scene 3",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Video URL ",
              "displayName": "Video URL ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Thumbnail",
              "displayName": "Thumbnail",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "580452f8-634b-4d09-bd10-ec7b2b2661e7",
      "name": "Save Idea & Metadata to Google Sheets3",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        1680,
        1020
      ],
      "typeVersion": 4.5,
      "notesInFlow": false,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "ie8rgGVXzeaoIA51",
          "name": "Google Sheets account"
        }
      },
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "=1liAQknFquByT7BsvCBCxwLXTYzcyTnveIn74Vl8QM9s",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "0",
          "mode": "id"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Scene 1": "={{ $json.output['Scene 1'] }}",
            "Scene 2": "={{ $json.output['Scene 2'] }}",
            "Scene 3": "={{ $json.output['Scene 3'] }}",
            "Environment_": "={{ $json.output.Environment }}",
            "Sound_": "={{ $json.output.Sound }}",
            "Idea_": "={{ $json.output.Idea }}",
            "ID": "={{ $('AI Agent: Generate Creative Video Idea').item.json.output[0].ID }}",
            "Status": "ready for production"
          },
          "matchingColumns": [
            "ID"
          ],
          "schema": [
            {
              "id": "ID",
              "displayName": "ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Caption",
              "displayName": "Caption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Idea",
              "displayName": "Idea",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Environment",
              "displayName": "Environment",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Sound",
              "displayName": "Sound",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Idea_",
              "displayName": "Idea_",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Environment_",
              "displayName": "Environment_",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Sound_",
              "displayName": "Sound_",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Scene 1",
              "displayName": "Scene 1",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Scene 2",
              "displayName": "Scene 2",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Scene 3",
              "displayName": "Scene 3",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Video URL ",
              "displayName": "Video URL ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Thumbnail",
              "displayName": "Thumbnail",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "f52053a3-63d5-4abb-9047-97d8f687cc9c",
      "name": "Save Detailed Video Prompts to Google Sheets1",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        1620,
        40
      ],
      "typeVersion": 4.5,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "ie8rgGVXzeaoIA51",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "=1liAQknFquByT7BsvCBCxwLXTYzcyTnveIn74Vl8QM9s",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "0",
          "mode": "id"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Video URL ": "={{ $json.data.outputs[0] }}",
            "ID": "=#000001"
          },
          "matchingColumns": [
            "ID"
          ],
          "schema": [
            {
              "id": "ID",
              "displayName": "ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Caption",
              "displayName": "Caption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Idea",
              "displayName": "Idea",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Environment",
              "displayName": "Environment",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Sound",
              "displayName": "Sound",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Idea_",
              "displayName": "Idea_",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Environment_",
              "displayName": "Environment_",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Sound_",
              "displayName": "Sound_",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Scene 1",
              "displayName": "Scene 1",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Scene 2",
              "displayName": "Scene 2",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Scene 3",
              "displayName": "Scene 3",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Video URL ",
              "displayName": "Video URL ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Thumbnail",
              "displayName": "Thumbnail",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "17a805f6-fc26-49be-867c-a009b3df8ae4",
      "name": "Save Video Clips  Infos to Google Sheets2",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        740,
        1000
      ],
      "typeVersion": 4.5,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "ie8rgGVXzeaoIA51",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1liAQknFquByT7BsvCBCxwLXTYzcyTnveIn74Vl8QM9s",
          "mode": "list",
          "cachedResultName": "Feuille de calcul sans titre",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1liAQknFquByT7BsvCBCxwLXTYzcyTnveIn74Vl8QM9s/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Idea",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1liAQknFquByT7BsvCBCxwLXTYzcyTnveIn74Vl8QM9s/edit#gid=0"
        },
        "options": {
          "dataLocationOnSheet": {
            "values": {
              "rangeDefinition": "specifyRangeA1",
              "range": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Range', ``, 'string') }}"
            }
          }
        }
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        440,
        440
      ],
      "id": "52ebc6a4-afcb-4a41-8fdb-179de7e7e914",
      "name": "Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "ie8rgGVXzeaoIA51",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "amount": 3
      },
      "id": "2e32e924-ee3d-4480-9836-0b4fd93d95bd",
      "name": "Wait for Clip Generation (Wavespeed AI)3",
      "type": "n8n-nodes-base.wait",
      "position": [
        -2060,
        900
      ],
      "webhookId": "60604cd4-5d90-48dc-93f4-1335e5f03fdd",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8c47fb22-5e15-4962-99cb-15020b6049c1",
              "name": "clip_url",
              "value": "={{ $json.outputs[0] }}",
              "type": "string"
            },
            {
              "id": "9c4b3e89-e485-4b8e-a12b-1965d256cc94",
              "name": "",
              "value": "",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2180,
        680
      ],
      "id": "90470499-0325-4f86-8078-3b374392bdde",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "amount": 240
      },
      "id": "21beeb5a-b506-4a8f-856a-dffff733fb49",
      "name": "Wait for Clip Generation (Wavespeed AI)",
      "type": "n8n-nodes-base.wait",
      "position": [
        360,
        900
      ],
      "webhookId": "60604cd4-5d90-48dc-93f4-1335e5f03fdd",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "content": "## | Step 1: Generate Clips (Wavespeed AI)\n",
        "height": 480,
        "width": 980,
        "color": 2
      },
      "id": "88d9fdf8-653f-4391-bde5-317e8f71e5fe",
      "name": "Sticky Note11",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -80,
        700
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## | Step 2: Generate Sounds (Fal AI)\n",
        "height": 460,
        "width": 960,
        "color": 2
      },
      "id": "bf1163a4-404b-48ee-9b26-f6d0bfd5ed4f",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        940,
        720
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "function findSceneEntries(obj) {\n  const scenes = [];\n\n  for (const [key, value] of Object.entries(obj)) {\n    if (key.toLowerCase().startsWith(\"scene\") && typeof value === \"string\") {\n      scenes.push(value);\n    } else if (typeof value === \"object\" && value !== null) {\n      scenes.push(...findSceneEntries(value));\n    }\n  }\n\n  return scenes;\n}\n\nlet output = [];\n\ntry {\n  const inputData = items[0].json;\n  const scenes = findSceneEntries(inputData);\n\n  if (scenes.length === 0) {\n    throw new Error(\"No scene keys found at any level.\");\n  }\n\n  output = scenes.map(scene => ({ description: scene }));\n} catch (e) {\n  throw new Error(\"Could not extract scenes properly. Details: \" + e.message);\n}\n\nreturn output;\n"
      },
      "id": "84d5cd19-bfa1-4675-a7fc-e07efbd7af58",
      "name": "Extract Individual Scene Descriptions1",
      "type": "n8n-nodes-base.code",
      "position": [
        -20,
        760
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.wavespeed.ai/api/v3/bytedance/seedance-v1-pro-t2v-480p",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "={\n  \"aspect_ratio\": \"9:16\",\n  \"duration\": 10,\n  \"prompt\": \"VIDEO THEME: {{ $('AI Agent: Generate Detailed Video Prompts').item.json.output.Idea }} | WHAT HAPPENS IN THE VIDEO: {{ $json.description }} | WHERE THE VIDEO IS SHOT: {{ $('AI Agent: Generate Detailed Video Prompts').item.json.output.Environment }}\"\n}\n",
        "options": {
          "batching": {
            "batch": {
              "batchSize": 1,
              "batchInterval": 3000
            }
          }
        }
      },
      "id": "66c9f45f-dd7b-44bc-87c6-49665a897560",
      "name": "Generate Video Clips (Wavespeed AI)1",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        160,
        820
      ],
      "typeVersion": 4.2,
      "retryOnFail": true,
      "credentials": {
        "httpHeaderAuth": {
          "id": "pGjf5G1B4ohFX6Qx",
          "name": "Header Auth account"
        },
        "httpBearerAuth": {
          "id": "rRbyzY5BL1yCg7EP",
          "name": "Bearer Auth account"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://api.wavespeed.ai/api/v3/predictions/{{ $json.data.id }}/result",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "options": {}
      },
      "id": "519fdfca-0f09-48cd-9fc9-5cd2469b6795",
      "name": "Retrieve Video Clips1",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        540,
        960
      ],
      "typeVersion": 4.2,
      "credentials": {
        "httpHeaderAuth": {
          "id": "pGjf5G1B4ohFX6Qx",
          "name": "Header Auth account"
        },
        "httpBearerAuth": {
          "id": "rRbyzY5BL1yCg7EP",
          "name": "Bearer Auth account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://queue.fal.run/fal-ai/mmaudio-v2 ",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Key 1edd36d1-831f-4b81-8696-0aaaa7e7ec5c:6962229aa33f08bb2cf557e281f39845"
            }
          ]
        },
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "= {\n        \"prompt\": \"ASMR Soothing sound effects. {{ $('AI Agent: Generate Detailed Video Prompts').item.json.output.Sound }}\",\n        \"duration\": 10,\n        \"video_url\": \"{{ $json.data.outputs[0] }}\"\n  }\n",
        "options": {
          "batching": {
            "batch": {
              "batchSize": 1,
              "batchInterval": 2000
            }
          }
        }
      },
      "id": "8ef24863-bcfa-4b18-a3c3-856b2276eb47",
      "name": "Generate ASMR Sound (Fal AI)1",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1040,
        800
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "amount": 60
      },
      "id": "64fda87b-6351-44a8-8d4f-ca9496a684b2",
      "name": "Wait for Sound Generation (Fal AI)2",
      "type": "n8n-nodes-base.wait",
      "position": [
        1240,
        880
      ],
      "webhookId": "abac7859-a9f6-46f3-95c2-df43ec32807d",
      "typeVersion": 1.1,
      "disabled": true
    },
    {
      "parameters": {
        "url": "=https://queue.fal.run/fal-ai/mmaudio-v2/requests/{{ $json.request_id }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Key 1edd36d1-831f-4b81-8696-0aaaa7e7ec5c:6962229aa33f08bb2cf557e281f39845"
            }
          ]
        },
        "options": {}
      },
      "id": "efeb7d55-fa76-4948-9f34-fb91fbc3b459",
      "name": "Retrieve Final Sound Output1",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1440,
        960
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    video_urls: items.map(item => item.json.video.url)\n  }\n];"
      },
      "id": "d5ade5c9-cafd-46e6-9eb9-180adec06ca2",
      "name": "List Clip URLs for Stitching1",
      "type": "n8n-nodes-base.code",
      "position": [
        -20,
        1360
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://queue.fal.run/fal-ai/ffmpeg-api/compose",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Key 1edd36d1-831f-4b81-8696-0aaaa7e7ec5c:6962229aa33f08bb2cf557e281f39845"
            }
          ]
        },
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "={\n  \"tracks\": [\n    {\n      \"id\": \"1\",\n      \"type\": \"video\",\n      \"keyframes\": [\n        { \"url\": \"{{ $json.video_urls[0] }}\", \"timestamp\": 0, \"duration\": 10 },\n        { \"url\": \"{{ $json.video_urls[1] }}\", \"timestamp\": 10, \"duration\": 10 },\n        { \"url\": \"{{ $json.video_urls[2] }}\", \"timestamp\": 20, \"duration\": 10 }\n      ]\n    }\n  ]\n}",
        "options": {
          "batching": {
            "batch": {
              "batchSize": 1,
              "batchInterval": 2000
            }
          }
        }
      },
      "id": "6ea57186-467e-468e-b100-edc8ab5651ad",
      "name": "Merge Clips into Final Video (Fal AI)1",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        420,
        1340
      ],
      "typeVersion": 4.2,
      "credentials": {
        "httpHeaderAuth": {
          "id": "pGjf5G1B4ohFX6Qx",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "amount": 60
      },
      "id": "717d8681-72e2-4a27-9bce-8f3e7d57b172",
      "name": "Wait for Video Rendering (Fal AI)1",
      "type": "n8n-nodes-base.wait",
      "position": [
        860,
        1380
      ],
      "webhookId": "389fcfd1-9337-4334-a54b-4114f36e30bc",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "url": "=https://queue.fal.run/fal-ai/ffmpeg-api/requests/{{ $json.request_id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Key 1edd36d1-831f-4b81-8696-0aaaa7e7ec5c:6962229aa33f08bb2cf557e281f39845"
            }
          ]
        },
        "options": {}
      },
      "id": "cc8d41b1-f69a-4db5-be7e-68ee213f354e",
      "name": "Retrieve Final Merged Video1",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1300,
        1420
      ],
      "typeVersion": 4.2,
      "credentials": {
        "httpHeaderAuth": {
          "id": "pGjf5G1B4ohFX6Qx",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "=1liAQknFquByT7BsvCBCxwLXTYzcyTnveIn74Vl8QM9s",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "0",
          "mode": "id"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Video URL ": "={{ $json.video_url }}",
            "Thumbnail": "={{ $json.thumbnail_url }}",
            "Status": "ready to be posted",
            "ID": "1"
          },
          "matchingColumns": [
            "ID"
          ],
          "schema": [
            {
              "id": "ID",
              "displayName": "ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Caption",
              "displayName": "Caption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Idea",
              "displayName": "Idea",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Environment",
              "displayName": "Environment",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Sound",
              "displayName": "Sound",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Idea_",
              "displayName": "Idea_",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Environment_",
              "displayName": "Environment_",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Sound_",
              "displayName": "Sound_",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Scene 1",
              "displayName": "Scene 1",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Scene 2",
              "displayName": "Scene 2",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Scene 3",
              "displayName": "Scene 3",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Video URL ",
              "displayName": "Video URL ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Thumbnail",
              "displayName": "Thumbnail",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "0b675049-bb4e-440f-9cf8-a72c2d8286e6",
      "name": "URL Final Video1",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        1620,
        1460
      ],
      "typeVersion": 4.5,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "ie8rgGVXzeaoIA51",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.perplexity.ai/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer YOUR_API_KEY"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"sonar-reasoning\",\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"Suggest a content idea different from this video script: \\\"{{ $json['Mod√®le de script vid√©o'] }}\\\". It should be in the same niche and on the exact same topic or content idea but offer fresh value. You must pick one idea from your research that matches the topic idea of the video script exactly but is also different and unique from it so it would stand out on social media. Example: if the video script contains a list of tools, your topic must also be a list of tools in that video script topic but slightly different, maybe different tools etc. If the video's script is about a plan, strategies, or whatever, you must also make your topic about that. So you must maintain the nature of the topic in the video script. You absolutely must be specific as the original video script. You can't just mention generic tools or strategies if the original video script contains specific tools. Etc. That is the level of accuracy and perfect matching of the video script original topic. Make sure it appeals to a broad audience like the example.\"\n    }\n  ]\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -40,
        -480
      ],
      "id": "05b45606-a225-418a-bd0d-a0d6d1d00f43",
      "name": "Suggest Similar Idea (Perplexity)"
    },
    {
      "parameters": {
        "jsCode": "// Step 1: Pull raw input\nlet raw = $input.first().json.choices[0].message.content;\n// Step 2: Forcefully remove anything between <think> and </think>\nlet cleaned = raw.replace(/<think>(.|\\n)*?<\\/think>/gi,\n'').trim();\n// Optional cleanup: remove leading/trailing blank lines\ncleaned = cleaned.replace(/^\\s+|\\s+$/g, '');\n// Done\nreturn [\n{\njson: {\ncleanedResponse: cleaned\n}\n}\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        200,
        -480
      ],
      "id": "426c9330-9388-441f-83de-1b59621928e2",
      "name": "Clean Perplexity Response"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "GPT-4O"
        },
        "messages": {
          "values": [
            {
              "content": "=You are rewriting a TikTok video script, caption, and overlay ‚Äî\nnot inventing a new one. You must follow this format and obey\nthese rules strictly.\n---\n### CONTEXT:\nHere is the content idea to use:\n{{ $json.cleanedResponse }}\n\n---\n### STEP 1: Rewrite the original video script BELOW using the new\ntopic/context above but maintaiin as stubbornly as possible the\noriginal script structure and style:\nOriginal script: {{ $('Save Original Video to Google Sheets').item.json['Mod√®le de script vid√©o'] }}\n\n\nüõë DO NOT CHANGE the original structure or style but\nThis includes:\n- Numbered list\n- Sentence breaks\n- \"I\" or first-person narration\n- Colloquial/informal tone (like ‚Äúyou're gonna wanna...‚Äù)\n‚úÇÔ∏è You MUST keep:\n- first person narration of the orignal script at all costs\n- MUST be under 700 characters (yes \"Characters\" not wordcount)\nthis is an absolute MUST, no more than 700 characters!!! But never\nchange the structure or narration style of the original script. It\nmust be an exact imitation.\n‚úèÔ∏è You MAY change:\n- Tool names\n- Use cases\n- Descriptions\n- Niche-specific keywords\n\n#Rule: never use any characers like \"\" in your generated video\nscript as this will yeild syntax errors.\n---\n### STEP 2: Rewrite the caption text using the new topic.\nKeep:\n- Same structure and tone\n- Same use of #hashtags but space between each hashtag\n- Similar sentence count and layout\nCaption:\n{{ $('Save Original Video to Google Sheets').item.json.Caption }}\n\n---\n### STEP 3: Rewrite the text overlay (short version for the\nthumbnail or first screen)\nKeep:\n- EXACT Same length format, case, structure\n- Do NOT invent new words unless absolutely necessary\nOverlay:\n{{ $('Save Original Video to Google Sheets').item.json['Mod√®le de texte superpos√©'] }}\n---\n### FINAL OUTPUT FORMAT (no markdown formatting):\nText Overlay: [REWRITTEN TEXT OVERLAY]\nVideo Script: [REWRITTEN SCRIPT]\nCaption Text: [REWRITTEN CAPTION TEXT]\nDO NOT return any explanations. Only return the rewritten\nsections."
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        540,
        -480
      ],
      "id": "d4711eda-9804-43f7-8c0f-17f282f6c767",
      "name": "Rewrite Script, Caption, Overlay (GPT-4o)"
    },
    {
      "parameters": {
        "jsCode": "// R√©cup√®re le contenu du premier item\nconst input = $input.first().json.message.content;\n\n// On tol√®re les retours √† la ligne r√©els (\\n) ou √©chapp√©s (\\\\n)\n\n// Text Overlay\nconst textOverlayMatch = input.match(\n  /Text\\s*Overlay:\\s*(.+?)(?:\\r?\\n|\\\\n)/s\n);\n\n// Video Script\nconst videoScriptMatch = input.match(\n  /Video\\s*Script:\\s*(.+?)(?:\\r?\\n|\\\\n)Caption\\s*Text:/s\n);\n\n// Caption Text (jusqu'√† la fin)\nconst captionTextMatch = input.match(\n  /Caption\\s*Text:\\s*(.+)/s\n);\n\nreturn [\n  {\n    json: {\n      textOverlay:   textOverlayMatch   ? textOverlayMatch[1].trim()   : null,\n      videoScript:   videoScriptMatch   ? videoScriptMatch[1].trim()   : null,\n      captionText:   captionTextMatch   ? captionTextMatch[1].trim()   : null,\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1000,
        -480
      ],
      "id": "5c4de2ee-75cf-4139-9f01-8f8a76576662",
      "name": "Split Rewritten Content into Sections"
    },
    {
      "parameters": {
        "jsCode": "// Utility to create a random alphanumeric ID\nfunction createUniqueId(length = 12) {\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  let id = '';\n  for (let i = 0; i < length; i++) {\n    const randomIndex = Math.floor(Math.random() * characters.length);\n    id += characters[randomIndex];\n  }\n  return id;\n}\n\n// Return the ID in the expected output structure\nreturn [\n  {\n    json: {\n      code: createUniqueId()\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1220,
        -480
      ],
      "id": "746395b1-83e0-448a-a5dd-89f8cfe019ba",
      "name": "Generate New Video ID"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "=",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "=52679157",
          "mode": "id"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Caption": "={{ $('Split Rewritten Content into Sections').item.json.captionText }}",
            "ID de la vid√©o": "={{ $json.code }}",
            "ID du mod√®le": "={{ $('Generate Unique Template ID').first().json.code }}",
            "Sujet": "={{ $('Clean Perplexity Response').first().json.cleanedResponse }}",
            "Texte superpos√©": "={{ $('Split Rewritten Content into Sections').item.json.textOverlay }}",
            "Script": "={{ $('Split Rewritten Content into Sections').item.json.videoScript }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "ID du mod√®le",
              "displayName": "ID du mod√®le",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ID de la vid√©o",
              "displayName": "ID de la vid√©o",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Sujet",
              "displayName": "Sujet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Texte superpos√©",
              "displayName": "Texte superpos√©",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Script",
              "displayName": "Script",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Caption",
              "displayName": "Caption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "URL de la vid√©o",
              "displayName": "URL de la vid√©o",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Date de publication",
              "displayName": "Date de publication",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Statut",
              "displayName": "Statut",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        1540,
        -440
      ],
      "id": "d9d9bf30-4aeb-4689-812f-dc9d1ddb7bf3",
      "name": "Save Rewritten Video to Google Sheets"
    }
  ],
  "connections": {
    "Get my video": {
      "main": [
        []
      ]
    },
    "URL Final Video": {
      "main": [
        []
      ]
    },
    "Retrieve Video Clips": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Assign Social Media IDs": {
      "main": [
        []
      ]
    },
    "Upload Video to Blotato": {
      "main": [
        [
          {
            "node": "INSTAGRAM",
            "type": "main",
            "index": 0
          },
          {
            "node": "YOUTUBE",
            "type": "main",
            "index": 0
          },
          {
            "node": "TIKTOK",
            "type": "main",
            "index": 0
          },
          {
            "node": "FACEBOOK",
            "type": "main",
            "index": 0
          },
          {
            "node": "THREADS",
            "type": "main",
            "index": 0
          },
          {
            "node": "TWITTER",
            "type": "main",
            "index": 0
          },
          {
            "node": "LINKEDIN",
            "type": "main",
            "index": 0
          },
          {
            "node": "BLUESKY",
            "type": "main",
            "index": 0
          },
          {
            "node": "PINTEREST",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retrieve Final Merged Video": {
      "main": [
        [
          {
            "node": "URL Final Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retrieve Final Sound Output": {
      "main": [
        []
      ]
    },
    "Generate ASMR Sound (Fal AI)": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List Clip URLs for Stitching": {
      "main": [
        [
          {
            "node": "Merge Clips into Final Video (Fal AI)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for Video Rendering (Fal AI)": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tool: Refine and Validate Prompts1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent: Generate Detailed Video Prompts",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Wait for Sound Generation (Fal AI)": {
      "main": [
        [
          {
            "node": "Generate ASMR Sound (Fal AI)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Video Clips (Wavespeed AI)": {
      "main": [
        [
          {
            "node": "Retrieve Video Clips",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Structured Video Prompt Output": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent: Generate Detailed Video Prompts",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Extract Individual Scene Descriptions": {
      "main": [
        [
          {
            "node": "Generate Video Clips (Wavespeed AI)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Clips into Final Video (Fal AI)": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Idea & Metadata to Google Sheets": {
      "main": [
        [
          {
            "node": "AI Agent: Generate Detailed Video Prompts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent: Generate Creative Video Idea": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Trigger: Start Daily Content Generation": {
      "main": [
        [
          {
            "node": "AI Agent: Generate Creative Video Idea",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tool: Inject Creative Perspective (Idea)": {
      "ai_tool": [
        [
          {
            "node": "AI Agent: Generate Creative Video Idea",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent: Generate Detailed Video Prompts": {
      "main": [
        [
          {
            "node": "Save Detailed Video Prompts to Google Sheets1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse AI Output (Idea, Environment, Sound)": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent: Generate Creative Video Idea",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait for Clip Generation (Wavespeed AI)3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Retrieve Final Merged Video",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait for Video Rendering (Fal AI)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Wait for Sound Generation (Fal AI)1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait for Sound Generation (Fal AI)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Post Payload": {
      "main": [
        [
          {
            "node": "YT Init Upload",
            "type": "main",
            "index": 0
          },
          {
            "node": "IG Create Container",
            "type": "main",
            "index": 0
          },
          {
            "node": "TikTok Publish",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "YT Init Upload": {
      "main": [
        [
          {
            "node": "YT PUT Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IG Create Container": {
      "main": [
        [
          {
            "node": "IG Publish Reel",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for Clip Generation (Wavespeed AI)1": {
      "main": [
        [
          {
            "node": "AI Agent: Generate Creative Video Idea",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Save Idea & Metadata to Google Sheets",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait for Clip Generation (Wavespeed AI)1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for Clip Generation (Wavespeed AI)2": {
      "main": [
        [
          {
            "node": "AI Agent: Generate Detailed Video Prompts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "Extract Individual Scene Descriptions1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait for Clip Generation (Wavespeed AI)2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LLM: Draft Video Prompt Details (Kimi V2)": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent: Generate Detailed Video Prompts",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "LLM: Generate Raw Idea (Kimi V2)": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent: Generate Creative Video Idea",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Wait for Sound Generation (Fal AI)1": {
      "main": [
        [
          {
            "node": "Retrieve Final Sound Output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Idea & Metadata to Google Sheets3": {
      "main": [
        [
          {
            "node": "List Clip URLs for Stitching1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Detailed Video Prompts to Google Sheets1": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Video Clips  Infos to Google Sheets2": {
      "main": [
        [
          {
            "node": "Generate ASMR Sound (Fal AI)1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "ai_tool": [
        []
      ]
    },
    "Wait for Clip Generation (Wavespeed AI)3": {
      "main": [
        [
          {
            "node": "Retrieve Video Clips",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        []
      ]
    },
    "Wait for Clip Generation (Wavespeed AI)": {
      "main": [
        [
          {
            "node": "Retrieve Video Clips1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Individual Scene Descriptions1": {
      "main": [
        [
          {
            "node": "Generate Video Clips (Wavespeed AI)1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Video Clips (Wavespeed AI)1": {
      "main": [
        [
          {
            "node": "Wait for Clip Generation (Wavespeed AI)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retrieve Video Clips1": {
      "main": [
        [
          {
            "node": "Save Video Clips  Infos to Google Sheets2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate ASMR Sound (Fal AI)1": {
      "main": [
        [
          {
            "node": "Wait for Sound Generation (Fal AI)2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for Sound Generation (Fal AI)2": {
      "main": [
        [
          {
            "node": "Retrieve Final Sound Output1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retrieve Final Sound Output1": {
      "main": [
        [
          {
            "node": "Save Idea & Metadata to Google Sheets3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List Clip URLs for Stitching1": {
      "main": [
        [
          {
            "node": "Merge Clips into Final Video (Fal AI)1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Clips into Final Video (Fal AI)1": {
      "main": [
        [
          {
            "node": "Wait for Video Rendering (Fal AI)1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for Video Rendering (Fal AI)1": {
      "main": [
        [
          {
            "node": "Retrieve Final Merged Video1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retrieve Final Merged Video1": {
      "main": [
        [
          {
            "node": "URL Final Video1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "URL Final Video1": {
      "main": [
        [
          {
            "node": "Get my video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Suggest Similar Idea (Perplexity)": {
      "main": [
        [
          {
            "node": "Clean Perplexity Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean Perplexity Response": {
      "main": [
        [
          {
            "node": "Rewrite Script, Caption, Overlay (GPT-4o)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rewrite Script, Caption, Overlay (GPT-4o)": {
      "main": [
        [
          {
            "node": "Split Rewritten Content into Sections",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Rewritten Content into Sections": {
      "main": [
        [
          {
            "node": "Generate New Video ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate New Video ID": {
      "main": [
        [
          {
            "node": "Save Rewritten Video to Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {
    "Generate Video Clips (Wavespeed AI)1": [
      {
        "json": {
          "code": 200,
          "message": "success",
          "data": {
            "id": "9cb1f828a1a448a5b2c8c1f6d5543ebb",
            "model": "bytedance/seedance-v1-pro-t2v-480p",
            "outputs": [],
            "urls": {
              "get": "https://api.wavespeed.ai/api/v3/predictions/9cb1f828a1a448a5b2c8c1f6d5543ebb/result"
            },
            "has_nsfw_contents": [],
            "status": "created",
            "created_at": "2025-07-23T02:40:49.396Z",
            "error": "",
            "executionTime": 0,
            "timings": {
              "inference": 0
            }
          }
        }
      },
      {
        "json": {
          "code": 200,
          "message": "success",
          "data": {
            "id": "f054debaf4a443b9baa7cde61eda4880",
            "model": "bytedance/seedance-v1-pro-t2v-480p",
            "outputs": [],
            "urls": {
              "get": "https://api.wavespeed.ai/api/v3/predictions/f054debaf4a443b9baa7cde61eda4880/result"
            },
            "has_nsfw_contents": [],
            "status": "created",
            "created_at": "2025-07-23T02:40:52.125Z",
            "error": "",
            "executionTime": 0,
            "timings": {
              "inference": 0
            }
          }
        }
      },
      {
        "json": {
          "code": 200,
          "message": "success",
          "data": {
            "id": "cb741fd31bb34da29951dd4c8a37a69e",
            "model": "bytedance/seedance-v1-pro-t2v-480p",
            "outputs": [],
            "urls": {
              "get": "https://api.wavespeed.ai/api/v3/predictions/cb741fd31bb34da29951dd4c8a37a69e/result"
            },
            "has_nsfw_contents": [],
            "status": "created",
            "created_at": "2025-07-23T02:40:55.128Z",
            "error": "",
            "executionTime": 0,
            "timings": {
              "inference": 0
            }
          }
        }
      }
    ],
    "Trigger: Start Daily Content Generation": [
      {
        "json": {
          "timestamp": "2025-07-23T04:12:29.700+02:00",
          "Readable date": "July 23rd 2025, 4:12:29 am",
          "Readable time": "4:12:29 am",
          "Day of week": "Wednesday",
          "Year": "2025",
          "Month": "July",
          "Day of month": "23",
          "Hour": "04",
          "Minute": "12",
          "Second": "29",
          "Timezone": "Europe/Berlin (UTC+02:00)"
        }
      }
    ],
    "AI Agent: Generate Creative Video Idea": [
      {
        "json": {
          "output": [
            {
              "ID": "#000001",
              "Caption": "Bicycle bell glass gets surgically split with razor blade ü§Ø #glasscutting #satisfying #asmr #oddlysatisfying #viralreels #fyp #explore #trending #2024 #craft #arttiktok #crazy",
              "Idea": "Molten copper glass bicycle bell surgically halved",
              "Environment": "Pristine black velvet table under 4K macro camera, LED ring light casting bronze halos",
              "Sound": "Gentle crystalline shatter followed by perfect silence",
              "Status": "for production"
            }
          ]
        }
      }
    ],
    "Save Idea & Metadata to Google Sheets": [
      {
        "json": {
          "Caption": "Bicycle bell glass gets surgically split with razor blade ü§Ø #glasscutting #satisfying #asmr #oddlysatisfying #viralreels #fyp #explore #trending #2024 #craft #arttiktok #crazy",
          "Idea": "Molten copper glass bicycle bell surgically halved",
          "Environment": "Pristine black velvet table under 4K macro camera, LED ring light casting bronze halos",
          "Sound": "Gentle crystalline shatter followed by perfect silence",
          "Status": "for production",
          "ID": "#000001"
        }
      }
    ],
    "AI Agent: Generate Detailed Video Prompts": [
      {
        "json": {
          "output": {
            "Idea": "A razor-sharp chef's knife cutting through a taut beefsteak tomato on a pristine white cutting surface",
            "Environment": "Sterile commercial kitchen workspace with white marble countertop and soft daylight from overhead skylights",
            "Sound": "Sharp blade slicing through taut skin, wet splitting of dense tomato flesh, subtle liquid release, precise slicing rhythm",
            "Scene 1": "Macro extreme close-up tracking the blade's entry point: the knife approaches from frame right, tip kissing the tomato's surface tension. The taut skin dimples under pressure, creating a tiny white stress point that suddenly gives way with a clean 'snap'. The blade's polished edge catches light as it descends through the red flesh, revealing pristine cross-section with visible seed chambers glistening under micro-droplets. Camera rides directly over the blade in a smooth top-down glide, showing the precise separation of cellular structure as the gap widens behind the advancing edge.",
            "Scene 2": "Side-profile medium shot at 45-degree angle: the tomato sits centered as the blade enters perpendicular. Light rakes across the cut surface from left, creating dramatic shadows in the wake of the knife. Each slice releases a glistening sheen of tomato juice that catches the light like liquid crystal. The camera slowly pushes in as successive cuts create perfect uniform slices, each falling away with weight-induced slight pivot showing the structural integrity of the dense flesh against the marble surface.",
            "Scene 3": "Overhead bird's-eye establishing shot: pristine white surface dominates lower two-thirds frame while the tomato and knife command center. The cutting mat provides subtle grid pattern under invisible acrylic sheet. In slow circular dolly movement, the knife makes precise quarter-turn cuts, each slice maintaining identical 90-degree rotation. The marble's subtle veining creates natural leading lines while cross-lighting from unseen sources creates sharp shadows and brilliant highlights on the blade's high-polish finish."
          }
        }
      }
    ],
    "Save Detailed Video Prompts to Google Sheets1": [
      {
        "json": {
          "Scene 1": "Macro extreme close-up tracking the blade's entry point: the knife approaches from frame right, tip kissing the tomato's surface tension. The taut skin dimples under pressure, creating a tiny white stress point that suddenly gives way with a clean 'snap'. The blade's polished edge catches light as it descends through the red flesh, revealing pristine cross-section with visible seed chambers glistening under micro-droplets. Camera rides directly over the blade in a smooth top-down glide, showing the precise separation of cellular structure as the gap widens behind the advancing edge.",
          "Scene 2": "Side-profile medium shot at 45-degree angle: the tomato sits centered as the blade enters perpendicular. Light rakes across the cut surface from left, creating dramatic shadows in the wake of the knife. Each slice releases a glistening sheen of tomato juice that catches the light like liquid crystal. The camera slowly pushes in as successive cuts create perfect uniform slices, each falling away with weight-induced slight pivot showing the structural integrity of the dense flesh against the marble surface.",
          "Scene 3": "Overhead bird's-eye establishing shot: pristine white surface dominates lower two-thirds frame while the tomato and knife command center. The cutting mat provides subtle grid pattern under invisible acrylic sheet. In slow circular dolly movement, the knife makes precise quarter-turn cuts, each slice maintaining identical 90-degree rotation. The marble's subtle veining creates natural leading lines while cross-lighting from unseen sources creates sharp shadows and brilliant highlights on the blade's high-polish finish.",
          "Environment_": "Sterile commercial kitchen workspace with white marble countertop and soft daylight from overhead skylights",
          "Sound_": "Sharp blade slicing through taut skin, wet splitting of dense tomato flesh, subtle liquid release, precise slicing rhythm",
          "Idea_": "A razor-sharp chef's knife cutting through a taut beefsteak tomato on a pristine white cutting surface",
          "ID": "#000001",
          "Status": "ready for production"
        }
      }
    ],
    "If4": [
      {
        "json": {
          "Scene 1": "Macro extreme close-up tracking the blade's entry point: the knife approaches from frame right, tip kissing the tomato's surface tension. The taut skin dimples under pressure, creating a tiny white stress point that suddenly gives way with a clean 'snap'. The blade's polished edge catches light as it descends through the red flesh, revealing pristine cross-section with visible seed chambers glistening under micro-droplets. Camera rides directly over the blade in a smooth top-down glide, showing the precise separation of cellular structure as the gap widens behind the advancing edge.",
          "Scene 2": "Side-profile medium shot at 45-degree angle: the tomato sits centered as the blade enters perpendicular. Light rakes across the cut surface from left, creating dramatic shadows in the wake of the knife. Each slice releases a glistening sheen of tomato juice that catches the light like liquid crystal. The camera slowly pushes in as successive cuts create perfect uniform slices, each falling away with weight-induced slight pivot showing the structural integrity of the dense flesh against the marble surface.",
          "Scene 3": "Overhead bird's-eye establishing shot: pristine white surface dominates lower two-thirds frame while the tomato and knife command center. The cutting mat provides subtle grid pattern under invisible acrylic sheet. In slow circular dolly movement, the knife makes precise quarter-turn cuts, each slice maintaining identical 90-degree rotation. The marble's subtle veining creates natural leading lines while cross-lighting from unseen sources creates sharp shadows and brilliant highlights on the blade's high-polish finish.",
          "Environment_": "Sterile commercial kitchen workspace with white marble countertop and soft daylight from overhead skylights",
          "Sound_": "Sharp blade slicing through taut skin, wet splitting of dense tomato flesh, subtle liquid release, precise slicing rhythm",
          "Idea_": "A razor-sharp chef's knife cutting through a taut beefsteak tomato on a pristine white cutting surface",
          "ID": "#000001",
          "Status": "ready for production"
        }
      }
    ],
    "Extract Individual Scene Descriptions1": [
      {
        "json": {
          "description": "Macro extreme close-up tracking the blade's entry point: the knife approaches from frame right, tip kissing the tomato's surface tension. The taut skin dimples under pressure, creating a tiny white stress point that suddenly gives way with a clean 'snap'. The blade's polished edge catches light as it descends through the red flesh, revealing pristine cross-section with visible seed chambers glistening under micro-droplets. Camera rides directly over the blade in a smooth top-down glide, showing the precise separation of cellular structure as the gap widens behind the advancing edge."
        }
      },
      {
        "json": {
          "description": "Side-profile medium shot at 45-degree angle: the tomato sits centered as the blade enters perpendicular. Light rakes across the cut surface from left, creating dramatic shadows in the wake of the knife. Each slice releases a glistening sheen of tomato juice that catches the light like liquid crystal. The camera slowly pushes in as successive cuts create perfect uniform slices, each falling away with weight-induced slight pivot showing the structural integrity of the dense flesh against the marble surface."
        }
      },
      {
        "json": {
          "description": "Overhead bird's-eye establishing shot: pristine white surface dominates lower two-thirds frame while the tomato and knife command center. The cutting mat provides subtle grid pattern under invisible acrylic sheet. In slow circular dolly movement, the knife makes precise quarter-turn cuts, each slice maintaining identical 90-degree rotation. The marble's subtle veining creates natural leading lines while cross-lighting from unseen sources creates sharp shadows and brilliant highlights on the blade's high-polish finish."
        }
      }
    ],
    "If3": [
      {
        "json": {
          "output": [
            {
              "ID": "#000001",
              "Caption": "Bicycle bell glass gets surgically split with razor blade ü§Ø #glasscutting #satisfying #asmr #oddlysatisfying #viralreels #fyp #explore #trending #2024 #craft #arttiktok #crazy",
              "Idea": "Molten copper glass bicycle bell surgically halved",
              "Environment": "Pristine black velvet table under 4K macro camera, LED ring light casting bronze halos",
              "Sound": "Gentle crystalline shatter followed by perfect silence",
              "Status": "for production"
            }
          ]
        }
      }
    ],
    "Wait for Clip Generation (Wavespeed AI)": [
      {
        "json": {
          "code": 200,
          "message": "success",
          "data": {
            "id": "9cb1f828a1a448a5b2c8c1f6d5543ebb",
            "model": "bytedance/seedance-v1-pro-t2v-480p",
            "outputs": [],
            "urls": {
              "get": "https://api.wavespeed.ai/api/v3/predictions/9cb1f828a1a448a5b2c8c1f6d5543ebb/result"
            },
            "has_nsfw_contents": [],
            "status": "created",
            "created_at": "2025-07-23T02:40:49.396Z",
            "error": "",
            "executionTime": 0,
            "timings": {
              "inference": 0
            }
          }
        }
      },
      {
        "json": {
          "code": 200,
          "message": "success",
          "data": {
            "id": "f054debaf4a443b9baa7cde61eda4880",
            "model": "bytedance/seedance-v1-pro-t2v-480p",
            "outputs": [],
            "urls": {
              "get": "https://api.wavespeed.ai/api/v3/predictions/f054debaf4a443b9baa7cde61eda4880/result"
            },
            "has_nsfw_contents": [],
            "status": "created",
            "created_at": "2025-07-23T02:40:52.125Z",
            "error": "",
            "executionTime": 0,
            "timings": {
              "inference": 0
            }
          }
        }
      },
      {
        "json": {
          "code": 200,
          "message": "success",
          "data": {
            "id": "cb741fd31bb34da29951dd4c8a37a69e",
            "model": "bytedance/seedance-v1-pro-t2v-480p",
            "outputs": [],
            "urls": {
              "get": "https://api.wavespeed.ai/api/v3/predictions/cb741fd31bb34da29951dd4c8a37a69e/result"
            },
            "has_nsfw_contents": [],
            "status": "created",
            "created_at": "2025-07-23T02:40:55.128Z",
            "error": "",
            "executionTime": 0,
            "timings": {
              "inference": 0
            }
          }
        }
      }
    ],
    "Retrieve Video Clips1": [
      {
        "json": {
          "code": 200,
          "message": "success",
          "data": {
            "id": "9cb1f828a1a448a5b2c8c1f6d5543ebb",
            "model": "bytedance/seedance-v1-pro-t2v-480p",
            "outputs": [
              "https://d1q70pf5vjeyhc.cloudfront.net/predictions/9cb1f828a1a448a5b2c8c1f6d5543ebb/1.mp4"
            ],
            "urls": {
              "get": "https://api.wavespeed.ai/api/v3/predictions/9cb1f828a1a448a5b2c8c1f6d5543ebb/result"
            },
            "has_nsfw_contents": [
              false
            ],
            "status": "completed",
            "created_at": "2025-07-23T02:40:49.395113156Z",
            "error": "",
            "executionTime": 71441,
            "timings": {
              "inference": 71441
            }
          }
        }
      },
      {
        "json": {
          "code": 200,
          "message": "success",
          "data": {
            "id": "f054debaf4a443b9baa7cde61eda4880",
            "model": "bytedance/seedance-v1-pro-t2v-480p",
            "outputs": [
              "https://d1q70pf5vjeyhc.cloudfront.net/predictions/f054debaf4a443b9baa7cde61eda4880/1.mp4"
            ],
            "urls": {
              "get": "https://api.wavespeed.ai/api/v3/predictions/f054debaf4a443b9baa7cde61eda4880/result"
            },
            "has_nsfw_contents": [
              false
            ],
            "status": "completed",
            "created_at": "2025-07-23T02:40:52.123173481Z",
            "error": "",
            "executionTime": 69916,
            "timings": {
              "inference": 69916
            }
          }
        }
      },
      {
        "json": {
          "code": 200,
          "message": "success",
          "data": {
            "id": "cb741fd31bb34da29951dd4c8a37a69e",
            "model": "bytedance/seedance-v1-pro-t2v-480p",
            "outputs": [
              "https://d1q70pf5vjeyhc.cloudfront.net/predictions/cb741fd31bb34da29951dd4c8a37a69e/1.mp4"
            ],
            "urls": {
              "get": "https://api.wavespeed.ai/api/v3/predictions/cb741fd31bb34da29951dd4c8a37a69e/result"
            },
            "has_nsfw_contents": [
              false
            ],
            "status": "completed",
            "created_at": "2025-07-23T02:40:55.12729605Z",
            "error": "",
            "executionTime": 71740,
            "timings": {
              "inference": 71740
            }
          }
        }
      }
    ],
    "Save Video Clips  Infos to Google Sheets2": [
      {
        "json": {
          "Video URL ": "https://d1q70pf5vjeyhc.cloudfront.net/predictions/9cb1f828a1a448a5b2c8c1f6d5543ebb/1.mp4",
          "ID": "#000001"
        }
      },
      {
        "json": {
          "Video URL ": "https://d1q70pf5vjeyhc.cloudfront.net/predictions/f054debaf4a443b9baa7cde61eda4880/1.mp4",
          "ID": "#000001"
        }
      },
      {
        "json": {
          "Video URL ": "https://d1q70pf5vjeyhc.cloudfront.net/predictions/cb741fd31bb34da29951dd4c8a37a69e/1.mp4",
          "ID": "#000001"
        }
      }
    ],
    "Generate ASMR Sound (Fal AI)1": [
      {
        "json": {
          "status": "IN_QUEUE",
          "request_id": "d6e252ef-2b9c-4693-9dc9-12c0f0708615",
          "response_url": "https://queue.fal.run/fal-ai/mmaudio-v2/requests/d6e252ef-2b9c-4693-9dc9-12c0f0708615",
          "status_url": "https://queue.fal.run/fal-ai/mmaudio-v2/requests/d6e252ef-2b9c-4693-9dc9-12c0f0708615/status",
          "cancel_url": "https://queue.fal.run/fal-ai/mmaudio-v2/requests/d6e252ef-2b9c-4693-9dc9-12c0f0708615/cancel",
          "logs": null,
          "metrics": {},
          "queue_position": 0
        }
      },
      {
        "json": {
          "status": "IN_QUEUE",
          "request_id": "50f8e7bd-4942-4134-a0cb-e1cf1f5bf721",
          "response_url": "https://queue.fal.run/fal-ai/mmaudio-v2/requests/50f8e7bd-4942-4134-a0cb-e1cf1f5bf721",
          "status_url": "https://queue.fal.run/fal-ai/mmaudio-v2/requests/50f8e7bd-4942-4134-a0cb-e1cf1f5bf721/status",
          "cancel_url": "https://queue.fal.run/fal-ai/mmaudio-v2/requests/50f8e7bd-4942-4134-a0cb-e1cf1f5bf721/cancel",
          "logs": null,
          "metrics": {},
          "queue_position": 0
        }
      },
      {
        "json": {
          "status": "IN_QUEUE",
          "request_id": "836cffad-c2b2-4447-b1d2-ebf33d791ab3",
          "response_url": "https://queue.fal.run/fal-ai/mmaudio-v2/requests/836cffad-c2b2-4447-b1d2-ebf33d791ab3",
          "status_url": "https://queue.fal.run/fal-ai/mmaudio-v2/requests/836cffad-c2b2-4447-b1d2-ebf33d791ab3/status",
          "cancel_url": "https://queue.fal.run/fal-ai/mmaudio-v2/requests/836cffad-c2b2-4447-b1d2-ebf33d791ab3/cancel",
          "logs": null,
          "metrics": {},
          "queue_position": 0
        }
      }
    ]
  },
  "versionId": "273c5b4d-a3b3-4a3d-af48-208f6f7ecec3",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-07-20T05:07:37.983Z",
      "updatedAt": "2025-07-20T05:07:37.983Z",
      "role": "workflow:owner",
      "workflowId": "gwN5uBm6WBODxmDY",
      "projectId": "dfihSMO24GNVuIpM",
      "project": {
        "createdAt": "2025-06-02T01:49:12.943Z",
        "updatedAt": "2025-06-03T17:01:34.876Z",
        "id": "dfihSMO24GNVuIpM",
        "name": "guillaume bolivard <guillaumebolivard@gmail.com>",
        "type": "personal",
        "icon": null,
        "projectRelations": [
          {
            "createdAt": "2025-06-02T01:49:12.944Z",
            "updatedAt": "2025-06-02T01:49:12.944Z",
            "role": "project:personalOwner",
            "userId": "7bcd283c-9587-46b0-b078-91f3217e06b7",
            "projectId": "dfihSMO24GNVuIpM",
            "user": {
              "createdAt": "2025-06-02T01:49:12.554Z",
              "updatedAt": "2025-07-28T18:29:17.351Z",
              "id": "7bcd283c-9587-46b0-b078-91f3217e06b7",
              "email": "guillaumebolivard@gmail.com",
              "firstName": "guillaume",
              "lastName": "bolivard",
              "personalizationAnswers": {
                "version": "v4",
                "personalization_survey_submitted_at": "2025-06-03T17:01:45.849Z",
                "personalization_survey_n8n_version": "1.94.1",
                "companySize": "<20",
                "companyType": "saas",
                "role": "business-owner",
                "reportedSource": "google"
              },
              "settings": {
                "userActivated": true,
                "easyAIWorkflowOnboarded": true,
                "firstSuccessfulWorkflowId": "IMfYaRPSuI74c7Ep",
                "userActivatedAt": 1753375680028,
                "npsSurvey": {
                  "responded": true,
                  "lastShownAt": 1753727350221
                }
              },
              "role": "global:owner",
              "disabled": false,
              "mfaEnabled": false,
              "isPending": false
            }
          }
        ]
      }
    }
  ],
  "tags": []
}